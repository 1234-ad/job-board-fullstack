version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: job_board_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: job_board
      MYSQL_USER: jobboard_user
      MYSQL_PASSWORD: jobboard_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - job_board_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: job_board_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - job_board_network

  # Node.js Backend
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: job_board_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: job_board
      DB_USER: jobboard_user
      DB_PASSWORD: jobboard_password
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_here
      OPENAI_API_KEY: your_openai_api_key_here
      CLIENT_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - job_board_network

  # React Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: job_board_frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_ENVIRONMENT: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - job_board_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: job_board_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - job_board_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  job_board_network:
    driver: bridge